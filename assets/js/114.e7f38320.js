(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{696:function(t,e,a){"use strict";a.r(e);var n=a(36),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("整理下yarn和npm的常用指令，方便自己查阅，"),a("a",{attrs:{href:"#%E6%8C%87%E4%BB%A4"}},[t._v("直接看指令")])]),t._v(" "),a("h2",{attrs:{id:"历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#历史"}},[t._v("#")]),t._v(" 历史")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("npm")]),t._v(" "),a("ul",[a("li",[t._v("npm是围绕着 语义版本控制（semver）的思想而设计。")]),t._v(" "),a("li",[t._v("主版本号.次版本号.补丁版本号\n"),a("ul",[a("li",[t._v("主版本号： 当API发生改变，并与之前的版本不兼容的时候")]),t._v(" "),a("li",[t._v("次版本号： 当增加了功能，但是向后兼容的时候")]),t._v(" "),a("li",[t._v("补丁版本号：当做了向后兼容的缺陷修复的时候")])])])])]),t._v(" "),a("li",[a("p",[t._v("Yarn")]),t._v(" "),a("ul",[a("li",[t._v("Yarn 是为了弥补 npm 的一些缺陷而出现的。")])])])]),t._v(" "),a("h2",{attrs:{id:"yarn和npm的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn和npm的差异"}},[t._v("#")]),t._v(" yarn和npm的差异")]),t._v(" "),a("ul",[a("li",[t._v("定义\n"),a("ul",[a("li",[a("code",[t._v("npm")]),t._v("的缺点\n"),a("ul",[a("li",[t._v("速度慢:删除node_modules，install安装依赖的时候都很慢。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("问：为什么慢？\n答：npm 2会安装每一个包所依赖的所有依赖项。如果我们有这么一个项目，它依赖项目A，项目A依赖项目B，项目B依赖项目C，那么依赖树将如下所示：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("node_modules\n- package-A\n-- node_modules\n--- package-B\n----- node_modules\n------ package-C\n-------- some-really-really-really-long-file-name-in-package-c.js\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("npm 3采用了扁平依赖关系树来解决这个问题，所以我们的3个项目结构现在看起来如下所示：\n"),a("code",[t._v("bash node_modules - package-A - package-B - package-C -- some-file-name-in-package-c.js")]),t._v("\n一般采用淘宝镜像可以加快速度")])]),t._v(" "),a("ul",[a("li",[t._v("同一个项目，安装的时候无法保持一致性。由于package.json文件中版本号的特点，下面三个版本号在安装的时候代表不同的含义。"),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5.0.3"')]),t._v(",  // 表示安装指定的5.0.3版本\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~5.0.3"')]),t._v(", // 表示安装5.0.X中最新的版本\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^5.0.3"')]),t._v("  // 表示安装5.X.X中最新的版本。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])])]),t._v(" "),a("li",[a("code",[t._v("yarn")]),t._v("的优点\n"),a("ul",[a("li",[t._v("速度快：npm是按队列下载，yarn是"),a("code",[t._v("并行执行")])]),t._v(" "),a("li",[t._v("离线模式：如果之前已经安装过一个软件包，用Yarn再次安装时之间从缓存中获取，就不用像npm那样再从网络下载了。")]),t._v(" "),a("li",[t._v("版本统一：yarn安装依赖时会产生yarn.lock文件，锁定依赖版本")])])])])])]),t._v(" "),a("h2",{attrs:{id:"指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("npm")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("yarn")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("安装所有包")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("npm install")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("yarn add vue")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("安装指定包")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("npm install vue --save")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("yarn add vue")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("卸载指定包")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("npm uninstall vue --save")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("yarn remove vue")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("卸载指定包")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("npm update --save")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("yarn upgrade")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("-g 是全局安装")]),t._v(" "),a("p",[t._v("–save，或-S，作用于生产环境， 写入dependencies")]),t._v(" "),a("p",[t._v("–save-dev，或-D，作用于开发环境，写入devDependencies")])]),t._v(" "),a("p",[t._v("项目打包时只会打包生产环境的依赖")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/254794d5e741",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm和yarn的区别，我们该如何选择?"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/macq/archive/2019/04/02/10642638.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm、cnpm、yarn 安装删除异同"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);